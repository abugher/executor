#!/bin/bash


function main() {
  exe_path="$(readlink -f "${0}")" \
    || fail "Failed to canonicalize:  ${0}"
  exe_dir="${exe_path%/*}"
  cd "${exe_dir}/.." \
    || fail "Failed to enter directory:  ${exe_dir}/.."
  wpwd="${PWD}"
  cd "${OLDPWD}"

  name="${0##*/}"
  bin="${wpwd}/bin"
  shared_lib="${wpwd}/lib"
  shared_doc="${wpwd}/doc"
  included=()

  unset exe_path
  unset exe_dir
  unset wpwd

  for dir in "${bin}" "${shared_lib}"; do
    if ! test -d "${dir}"; then
      fail "No such directory:  ${dir}"
    fi
  done

  include usage
  include link_trace

  while IFS= read -d $'\0' exe; do
    if test 'executor' = "${exe##*/}"; then
      local_lib="${exe%/*}/../lib"
      local_doc="${exe%/*}/../doc"
      break
    fi
  done < <(link_trace "${0}")

  include "${name}"

  if ! test 'function' = "$(type -t "${name}")"; then
    fail "Function not defined:  ${name}"
  fi

  "${name}" "${@}"
}


function include() {
  lib="${1}"
  for included in "${included[@]}"; do
    if test "${lib}" = "${included}"; then
      return 0
    fi
  done
  included+=( "${lib}" )
  if test -e "${local_lib}/${lib}"; then
    lib_path="${local_lib}"
    doc_path="${local_doc}"
  elif test -e "${shared_lib}/${lib}"; then
    lib_path="${shared_lib}"
    doc_path="${shared_doc}"
  else
    fail "No such library:  ${lib}"
  fi
  if ! test -e "${doc_path}/${lib}"; then
    warn "No documentation found for:  ${lib}"
  fi
  . "${lib_path}/${lib}" \
    || fail "Failed to include library:  ${lib}"
}


function output() {
  prefix="${name}:  "
  printf '%s%s\n' "${prefix}" "${1}"
}


function warn() {
  output "WARNING:  ${1}" 2>&1
}


function error() {
  output "ERROR:  ${1}" 2>&1
}


function fail() {
  error "${1}"
  exit "${2:-1}"
}


main "${@}"
